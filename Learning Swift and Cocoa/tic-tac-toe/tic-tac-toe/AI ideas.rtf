{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fnil\fcharset0 Tahoma;\f1\fnil\fcharset0 LucidaGrande;\f2\fnil\fcharset0 HelveticaNeue;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red107\green43\blue25;\red165\green57\blue30;
\red117\green117\blue117;\red22\green47\blue95;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth13300\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://en.wikipedia.org/wiki/Tic-tac-toe#Strategy"}}{\fldrslt 
\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
http://en.wikipedia.org/wiki/Tic-tac-toe#Strategy}}
\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\
\
class ai \{\
    var recomendedMove: Move\
\
    func \cf2 \expnd0\expndtw0\kerning0
opponentHasTwoInRow(arrayOfMoves) -> Bool \{\
    \
    \} \cf2 \expnd0\expndtw0\kerning0
\
\
\
\}\
\
if ai.opponentHasTwoInRow(moves) \{\
    ai.makeMove()\
\} else  if thisIsTrue \{\
    // do this\
\} else if thisIsTrue \cf2 \expnd0\expndtw0\kerning0
\{\
    // do this\
\} else if thisIsTrue \{\
    // do this\
\} else if thisIsTrue \{\
    // do this\
\} else \{\
   // do this\
\}\cf2 \expnd0\expndtw0\kerning0
\
\
\
func threeInRow( ) -> \{\
\
\}\
\
if threeInRowPossible \{\
    return\
\}\
    if OpponentHaveTwoInRow \{\
    moveToBlockOpponentsTwoInRow()\
\}\
\
{\field{\*\fldinst{HYPERLINK "http://programmers.stackexchange.com/questions/213559/algorithm-to-create-an-tictactoe-game-ai"}}{\fldrslt http://programmers.stackexchange.com/questions/213559/algorithm-to-create-an-tictactoe-game-ai}}\
Since Tic-Tac-Toe is a {\field{\*\fldinst{HYPERLINK "http://en.wikipedia.org/wiki/Solved_game"}}{\fldrslt \cf3 \expnd0\expndtw0\kerning0
solved game}}, I would recommend simply {\field{\*\fldinst{HYPERLINK "http://xkcd.com/832/"}}{\fldrslt \cf3 \expnd0\expndtw0\kerning0
playing a perfect game every time.}}\
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
The following algorithm will allow you (or the AI) to always deny your opponent victory:
\b0 \expnd0\expndtw0\kerning0
\
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0
\b \cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
Win:
\b0 \expnd0\expndtw0\kerning0
\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
If you have two in a row, you can place a third to get three in a row.\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
Block:
\b0 \expnd0\expndtw0\kerning0
\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
If the opponent has two in a row, you must play the third to block the opponent.\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
Fork:
\b0 \expnd0\expndtw0\kerning0
\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
Create an opportunity where you have two threats to win (two non-blocked lines of 2).\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
Blocking an opponent's fork:
\b0 \expnd0\expndtw0\kerning0
\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
If there is a configuration where the opponent can fork, you must block that fork.\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
Center:
\b0 \expnd0\expndtw0\kerning0
\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
You play the center if open.\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
Opposite corner:
\b0 \expnd0\expndtw0\kerning0
\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
If the opponent is in the corner, you play the opposite corner.\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
Empty corner:
\b0 \expnd0\expndtw0\kerning0
\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
You play in a corner square.\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
Empty side:
\b0 \expnd0\expndtw0\kerning0
\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\expnd0\expndtw0\kerning0
You play in a middle square on any of the 4 sides.\
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
Pick the highest possible on the list\
The perfect heuristic is pretty simple in terms of AI programming. The most difficult heuristic part to implement is searching for fork configurations. Once you have that the other checks are next to trivial!\

\itap2\trowd \taflags1 \trgaph108\trleft-108 \tamarb80 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth5520\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx2880
\clvertalt \clshdrawnil \clwWidth3700\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl100 \clpadr0 \gaph\cellx5760
\clvertalt \clshdrawnil \clwWidth3700\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl100 \clpadr0 \gaph\cellx8640
\pard\intbl\itap2\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://programmers.stackexchange.com/a/213570"}}{\fldrslt 
\f2\fs24 \cf5 \expnd0\expndtw0\kerning0
share}}
\f2\fs2 \cf6 \expnd0\expndtw0\kerning0
|{\field{\*\fldinst{HYPERLINK "http://programmers.stackexchange.com/posts/213570/edit"}}{\fldrslt 
\fs24 \cf5 \expnd0\expndtw0\kerning0
improve this answer}}
\fs24 \cf2 \expnd0\expndtw0\kerning0
\nestcell 
\pard\intbl\itap2\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://programmers.stackexchange.com/posts/213570/revisions"}}{\fldrslt 
\f0 \cf4 \expnd0\expndtw0\kerning0
edited Oct 6 '13 at 19:47}}
\f0 \expnd0\expndtw0\kerning0
\
\
\pard\intbl\itap2\pardeftab720
\cf5 \expnd0\expndtw0\kerning0
\nestcell 
\pard\intbl\itap2\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
answered Oct 6 '13 at 16:11{\field{\*\fldinst{HYPERLINK "http://programmers.stackexchange.com/users/92711/recursion-ninja"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\
recursion.ninja}}\
\
\
\
if\nestcell \lastrow\nestrow\cell \lastrow\row}